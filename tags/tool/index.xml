<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tool on Soichiro Murakami</title>
    <link>/tags/tool/</link>
    <description>Recent content in tool on Soichiro Murakami</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© Copyright Soichiro Murakami All Right Reserved</copyright>
    <lastBuildDate>Sat, 12 Jun 2021 00:55:51 +0900</lastBuildDate><atom:link href="/tags/tool/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>displaCyで固有表現抽出の結果を可視化する</title>
      <link>/posts/2021-06-12_how-to-use-spacy-visualizers/</link>
      <pubDate>Sat, 12 Jun 2021 00:55:51 +0900</pubDate>
      
      <guid>/posts/2021-06-12_how-to-use-spacy-visualizers/</guid>
      <description>はじめに この記事では、固有表現抽出の結果を可視化する方法を紹介します。 可視化のためのライブラリとして、spaCyで利用可能なdisplaCyを利用します
本記事は基本編と応用編の二構成となっています。 基本編では、spaCy上で動作する日本語自然言語処理のライブラリ「GiNZA」で固有表現抽出した結果を可視化する方法を紹介します。
応用編として、自作の固有表現抽出器の結果をdisplayCyで可視化する方法を紹介します。
環境 最近ではちょっとした実験はGoogle Colaboratoryを使っています。
環境をすぐに立ち上げることができて便利ですね。
本記事でもGoogle Colaboratory上での作業を例に紹介していきます。
作成したNotebookはこちらに公開しました。
まずは、pipで今回使用するginzaをインストールします。
※spaCyも依存ライブラリとしてインストールされます。
!pip install -U ginza  インストール後は、下記のようにパッケージをリロードしましょう。 これをしないとインストールしたもモデルを読むことができず、ランタイムの再起動が必要になります。
import pkg_resources, imp imp.reload(pkg_resources)  ginzaによる固有表現抽出 インストール後、モデルを読み込みます。
import spacy nlp = spacy.load(&#39;ja_ginza&#39;)  動作確認 例文「銀座線渋谷駅から銀座に向かう.」を銀座で解析してみます。
doc = nlp(&amp;quot;銀座線渋谷駅から銀座に向かう.&amp;quot;) for sent in doc.sents: for token in sent: print(token.i, token.orth_, token.lemma_, token.pos_, token.tag_, token.dep_, token.head.i)  このような結果が得られればOKです。
0 銀座 銀座 PROPN 名詞-固有名詞-地名-一般 compound 2 1 線 線 NOUN 名詞-普通名詞-一般 compound 2 2 渋谷駅 渋谷駅 PROPN 名詞-固有名詞-一般 obl 6 3 から から ADP 助詞-格助詞 case 2 4 銀座 銀座 PROPN 名詞-固有名詞-地名-一般 obl 6 5 に に ADP 助詞-格助詞 case 4 6 向かう 向かう VERB 動詞-一般 ROOT 6 7 .</description>
    </item>
    
  </channel>
</rss>
